COMANDOS BÁSCICOS #1

window.alert() --> Método utilizado para mostrar uma caixa de diálogo com um aviso e um botão "OK".

window.confirm() --> Método utilizado para mostrar uma caixa com uma mensagem e dois botões, um "OK" e um "Cancelar".

window.prompt() --> Método utilizado para mostrar uma caixa com uma mensagem solicitando que o usuário digite algum texto.

document.write() --> Método que grava uma sequência de caracteres em um documento.

document.writeln() --> Método que grava uma sequência de caracteres em uma nova linha do documento.

===================================================================================================

VARIÁVEIS E IDENTIFICADORES

As "váriaveis" são espaços de armazenamento de dados. Para utilizar esses espaços, é utilizado a palavra "var" (também pode ser usado a palavra "let"), e para identificar cada variável, a mesma precisa de um "identificador".

Para a nomeação de um identificador, deve-se levar em consideração algumas regras e dicas:
    - Podem começar com letra, $ ou _;
    - Não podem começar com números;
    - É possível usar letras ou números;
    - É possível usar acentos e símbolos;
    - Não podem conter espaços;
    - Não podem ser palavras reservadas, palavras essas que o JavaScript utiliza como comandos;
    - Letras maiúsculas e minúsculas fazem diferença;
    - É recomendável a escolha de nomes coerentes para as variáveis.

Os "dados", que são armazenados nas variáveis, podem ser classificados em diversos tipos, podendo ser:
    - string --> Sequência de caracteres usados para representar um texto.
        Ex. 1: "JavaScript";
        Ex. 2: 'Olá, Mundo!';
        Ex. 3: `(21) 91034-5678`.

    - number --> Valores numéricos, podendo ser inteiros, reais e negativos.
        Ex. 1: 5;
        Ex. 2: -12;
        Ex. 3: 3.14.

    - boolean --> Pode assumir dois valores, true ou false, ou seja, verdadeiro ou falso.

===================================================================================================

TRATAMENTO DE DADOS

Conversão de String para Number
    - Number.parseInt(n)
        Conversão para um número inteiro.
    
    - Number.parseFloat(n)
        Conversão para um número real

    - Number(n)
        O próprio JavaScript decide se o número convertido será inteiro ou real

---------------------------------------------------------------------------------------------------

Conversão de Number para String

    - String(n)

    - n.toString()

---------------------------------------------------------------------------------------------------

Formatando Strings
    var s = 'JavaScript'
    'Eu estou aprendendo s' --> não faz interpolação
    'Eu estou aprendendo ' + s --> usa concatenação
    `Eu estou aprendendo ${s}` --> usa template string

    s.length --> quantos caracteres a string tem
    s.toUpperCase() --> tudo para letras maiúsculas
    s.toLowerCase() --> tudo para letras minúsculas

---------------------------------------------------------------------------------------------------

Formatando Numbers
    var n1 = 1543.5
    n1 --> 1543.5
    n1.toFixed(2) --> 1543.50
    n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'}) --> R$ 1.543,50

===================================================================================================

OPERADORES

Os "Operadores" são símbolos que executam uma determinada manipulção matemática ou lógica específica. Esses operadores podem ser "aritméticos", "atribuição", "relacionais", "lógicos" e "ternários".

---------------------------------------------------------------------------------------------------

Operadores Aritméticos 

    + --> Operador de soma.
        Ex.: 5 + 2 = 7

    - --> Operador de subtração.
        Ex.: 5 - 2 = 3

    * --> Operador de multiplicação.
        Ex.: 5 * 2 = 10

    / --> Operador de divisão.
        Ex.: 5 / 2 = 2.5

    % --> Operador restante (resto da divisão).
        Ex.: 5 % 2 = 1

    ** --> Operador de potência.
        Ex.: 5 ** 2 = 25

---------------------------------------------------------------------------------------------------

Precedência dos Operadores 

    | --> ()
    | --> **
    | --> * / %
    | --> + -
    V

---------------------------------------------------------------------------------------------------

Operadores de Atribuição Simples

    var a = 5 + 3
        |--> Resultado deu 8

    var b = a % 5
        |--> Se a é igual a 8, então o resto da divisão com 5 é igual a 3

    var c = 5 * b ** 2
        |--> Segundo a ordem de precedência, primeiro é resolvida a potência, sendo b igual a 3, então o mesmo elevado a 2 é igual a 9. Com o resultado da potência sendo 9, então 5 multiplicado por 9 é igual a 45.

    var d = 10 - a / 2
        |--> Segundo a ordem de precedência, primeiro é resolvida a divisão, sendo a igual a 8, então 8 dividido por 2 é igual a 4. Com o resultado da divisão sendo 4, então 10 menos 4 é igual a 6.

    var e = 6 * 2 / d
        |--> Segundo a ordem de precedência, a multiplicação e a divisão se encontram juntas, portanto nesse caso, é resolvida primeira a operação que aparece primeiro. O resultado de 6 vezes 2 é igual a 12, e o mesmo dividido por d, que é igual a 6, o resultado da divisão é 2.

    var f = b % e + 4 / e
        |--> Segundo a ordem de precedência, primeiro se resolve o resto da divisão e a própria divisão, mas como o % aparece primeiro, esse será resolvido antes. O resto da divisão de b, que é igual a 3, com e, que é igual a 2, resulta em 1. O resultado da divisão de 4 com e, que é igual a 2, é 2. Então 1 mais 2 é igual a 3.

---------------------------------------------------------------------------------------------------

Auto-atribuição e Simplificação

    var n = 3
    n = n + 4  -->  n += 4
    n = n - 5  -->  n -= 5
    n = n * 4  -->  n *= 4
    n = n / 2  -->  n /= 2
    n = n ** 2 -->  n **= 2
    n = n % 5  -->  n %= 5

---------------------------------------------------------------------------------------------------

Incremento

    var x = 5
    x = x + 1  -->  x++
    x = x - 1  -->  x--

---------------------------------------------------------------------------------------------------

Operadores Relacionais 

    > --> Operador de maior.
        Ex.: 5 > 2 --> true

    < --> Operador de menor.
        Ex.: 7 < 4 --> false

    >= --> Operador de maior ou igual.
        Ex.: 8 >= 8 --> true

    <= --> Operador de menor ou igual.
        Ex.: 9 <= 7 --> false

    == --> Operador de igual.
        Ex.: 5 == 5 --> true

    != --> Operador de diferente.
        Ex.: 4 != 4 --> false

---------------------------------------------------------------------------------------------------

Operadores Relacionais de Identidade

    5 == 5 --> true 
        |--> O número 5 é igual a 5.

    5 == '5' --> true 
        |--> O número 5 é igual a '5', porque o sinal de igualdade (==) não testa o tipo. Para o JavaScript, ambos possuem a mesma grandeza.

    5 === '5' --> false 
        |--> O "operador de igualdade restrita" (===), leva em consideração tanto o valor quanto o tipo. Nesse exemplo, ambos possuem o mesmo valor, mas não possuem o mesmo tipo. Ou seja, nesse caso, 5 e '5' não são idênticos.

    5 === 5 --> true
        |--> Ambos os valores possuem o mesmo valor e o mesmo tipo, ou seja, são idênticos.

    5 !== '5' --> true
        |--> O "operador de desigual restrito" (!==) leva em consideração tanto o valor quanto o tipo. Nesse exemplo, ambos possuem o mesmo valor, mas não possuem o mesmo tipo. Ou seja, nesse caso, 5 e '5' são diferentes.

---------------------------------------------------------------------------------------------------

Exemplos Reais de Operadores Relacionais 

    - preço >= 200.50 --> O preço é maior ou igual a 200.50?

    - idade < 18 --> A idade é menor do que 18?

    - curso == 'JavaScript' --> O curso é JavaScript?

    - n1 != n2 --> O primeiro número é diferente do segundo número?

---------------------------------------------------------------------------------------------------

Operadores Lógicos 

    ! --> Operador de negação.
        Ex.: Eu quero uma caneta de qualquer cor, menos (!) azul.

        ! - true --> false
            false --> true

    && --> Operador de conjunção.
        Ex.: Eu quero uma caneta azul e (&&) uma caneta vermelha.

             true + true --> true
        && - true + false --> false
             false + true --> false 
             false + false --> false

    || --> Operador de disjunção.
        Ex.: Eu quero uma caneta azul ou (||) uma caneta vermelha.

             true + true --> true
        || - true + false --> true
             false + true --> true 
             false + false --> false

---------------------------------------------------------------------------------------------------

Precedência dos Operadores 

    | --> ()  **  /  ...
    | --> >  <  >=  ...
    | --> !
    | --> &&
    | --> ||
    V

---------------------------------------------------------------------------------------------------

Exemplos Reais de Operadores Lógicos 

    - idade >= 15 && idade <= 17 --> A idade está entre 15 e 17?

    - estado == 'RJ' || estado == 'SP' --> O estado é RJ ou SP?

    - salário > 1500 && sexo != 'M' --> O salário é acima de 1500 e não é homem?

---------------------------------------------------------------------------------------------------

Operadores Ternários 

    Os "operadores ternários" são o ? e o : dentro de uma mesma expressão. Esse operador é chamado assim, porque ele possui três partes e é representado da seguinte maneira:

    teste ? true : false

    ou seja,

    média >= 7.0?'Aprovado':'Reprovado'
        |--> Se a média for igual ou maior que 7.0, então está 'Aprovado', se não for, então está 'Reprovado'.

===================================================================================================

DOM 

O DOM (Document Object Model) é um modelo de objetos para documentos. Ou seja, é um conjunto de objetos dentro do navegador que dará acesso aos componentes internos do website.

---------------------------------------------------------------------------------------------------

Árvore DOM de exemplo 

           [window]
         /    |     \
[location][document][history]
              |
            [html]
           /      \
       [head]     [body]
      /   |      / |  | \
 [meta][title][h1][p][p][div]
                      |
                  [strong]

Quem está acima na árvore hierarquica é chamado de "parent" (pai), e que está abaixo na árvore hierarquica é chamado de "child" (filho).

---------------------------------------------------------------------------------------------------

Selecionando o DOM

Há 5 métodos de acesso ao DOM, podendo ser por Marca, por ID, por Nome, por Classe ou por Seletor.

    - Por Marca --> getElementsByTagName()

    - Por ID --> getElementById()

    - Por Nome --> get ElementByName()

    - Por Classe --> getElementsByClassName()

    - Por Seletor --> querySelector()
                 |--> querySelectorAll()